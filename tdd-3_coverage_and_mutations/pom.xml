<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.neusta</groupId>
    <artifactId>tdd-3_coverage_and_mutations</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <java.version>11</java.version>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.source>${java.version}</maven.compiler.source>

        <assertj.version>3.19.0</assertj.version>
        <junit-jupiter.version>5.7.1</junit-jupiter.version>
        <jacoco-maven-plugin.version>0.8.6</jacoco-maven-plugin.version>
        <maven-jacoco-plugin.version>0.8.6</maven-jacoco-plugin.version>
        <pitest-maven.version>1.5.2</pitest-maven.version>
        <pitest-junit5-plugin.version>0.12</pitest-junit5-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>

        <!--  coverage should be 100% -  we do TDD-->
        <jacoco.min.line.coverage>1</jacoco.min.line.coverage>
        <jacoco.min.branch.coverage>1</jacoco.min.branch.coverage>

        <pitest-maven.mutationThreshold>95</pitest-maven.mutationThreshold>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <plugin> <!-- we need a new version for junit jupiter test execution!-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${maven-jacoco-plugin.version}</version>
                <!--                <configuration>-->
                <!--                    <excludes>-->
                <!--                        <exclude>**/de/neusta/tdd/UntestableClass.*</exclude>-->
                <!--                    </excludes>-->
                <!--                </configuration>-->
                <executions>
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <!-- creates a report in the target/site/jacoco dir-->
                            <goal>report</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>check</id>
                        <goals>
                            <!-- check is bound to the verify phase by default -->
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>CLASS</element>
                                    <excludes>
                                        <exclude>*Test</exclude>
                                    </excludes>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.min.line.coverage}</minimum>
                                        </limit>
                                        <limit>
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.min.branch.coverage}</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>${pitest-maven.version}</version>
                <configuration>
                    <mutationThreshold>${pitest-maven.mutationThreshold}</mutationThreshold>
                    <excludedMethods>
                        <param>createModificationsFromProject</param>
                    </excludedMethods>
                    <outputFormats>
                        <outputFormat>XML</outputFormat>
                        <outputFormat>HTML</outputFormat>
                    </outputFormats>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-junit5-plugin</artifactId>
                        <version>${pitest-junit5-plugin.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>mutations</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>mutationCoverage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>